<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.chinasofti.mapper.StaffMapper" >
  <resultMap id="BaseResultMap" type="com.chinasofti.entity.Staff" >
    <id column="staff_id" property="staffId" jdbcType="INTEGER" />
    <result column="staff_name" property="staffName" jdbcType="VARCHAR" />
    <result column="staff_sex" property="staffSex" jdbcType="VARCHAR" />
    <result column="staff_birth" property="staffBirth" jdbcType="TIMESTAMP" />
    <result column="staff_num" property="staffNum" jdbcType="VARCHAR" />
    <result column="department_id" property="departmentId" jdbcType="INTEGER" />
    <result column="post_id" property="postId" jdbcType="INTEGER" />
    <result column="probation" property="probation" jdbcType="INTEGER" />
    <result column="quit" property="quit" jdbcType="INTEGER" />
    <result column="staff_addDate" property="staffAdddate" jdbcType="TIMESTAMP" />
    <result column="staff_mDate" property="staffMdate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    staff_id, staff_name, staff_sex, staff_birth, staff_num, department_id, post_id, 
    probation, quit, staff_addDate, staff_mDate
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.chinasofti.entity.StaffExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from staff
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from staff
    where staff_id = #{staffId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from staff
    where staff_id = #{staffId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.chinasofti.entity.StaffExample" >
    delete from staff
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.chinasofti.entity.Staff" >
    insert into staff (staff_id, staff_name, staff_sex, 
      staff_birth, staff_num, department_id, 
      post_id, probation, quit, 
      staff_addDate, staff_mDate)
    values (#{staffId,jdbcType=INTEGER}, #{staffName,jdbcType=VARCHAR}, #{staffSex,jdbcType=VARCHAR}, 
      #{staffBirth,jdbcType=TIMESTAMP}, #{staffNum,jdbcType=VARCHAR}, #{departmentId,jdbcType=INTEGER}, 
      #{postId,jdbcType=INTEGER}, #{probation,jdbcType=INTEGER}, #{quit,jdbcType=INTEGER}, 
      #{staffAdddate,jdbcType=TIMESTAMP}, #{staffMdate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.chinasofti.entity.Staff" >
    insert into staff
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="staffId != null" >
        staff_id,
      </if>
      <if test="staffName != null" >
        staff_name,
      </if>
      <if test="staffSex != null" >
        staff_sex,
      </if>
      <if test="staffBirth != null" >
        staff_birth,
      </if>
      <if test="staffNum != null" >
        staff_num,
      </if>
      <if test="departmentId != null" >
        department_id,
      </if>
      <if test="postId != null" >
        post_id,
      </if>
      <if test="probation != null" >
        probation,
      </if>
      <if test="quit != null" >
        quit,
      </if>
      <if test="staffAdddate != null" >
        staff_addDate,
      </if>
      <if test="staffMdate != null" >
        staff_mDate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="staffId != null" >
        #{staffId,jdbcType=INTEGER},
      </if>
      <if test="staffName != null" >
        #{staffName,jdbcType=VARCHAR},
      </if>
      <if test="staffSex != null" >
        #{staffSex,jdbcType=VARCHAR},
      </if>
      <if test="staffBirth != null" >
        #{staffBirth,jdbcType=TIMESTAMP},
      </if>
      <if test="staffNum != null" >
        #{staffNum,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null" >
        #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="postId != null" >
        #{postId,jdbcType=INTEGER},
      </if>
      <if test="probation != null" >
        #{probation,jdbcType=INTEGER},
      </if>
      <if test="quit != null" >
        #{quit,jdbcType=INTEGER},
      </if>
      <if test="staffAdddate != null" >
        #{staffAdddate,jdbcType=TIMESTAMP},
      </if>
      <if test="staffMdate != null" >
        #{staffMdate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.chinasofti.entity.StaffExample" resultType="java.lang.Integer" >
    select count(*) from staff
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update staff
    <set >
      <if test="record.staffId != null" >
        staff_id = #{record.staffId,jdbcType=INTEGER},
      </if>
      <if test="record.staffName != null" >
        staff_name = #{record.staffName,jdbcType=VARCHAR},
      </if>
      <if test="record.staffSex != null" >
        staff_sex = #{record.staffSex,jdbcType=VARCHAR},
      </if>
      <if test="record.staffBirth != null" >
        staff_birth = #{record.staffBirth,jdbcType=TIMESTAMP},
      </if>
      <if test="record.staffNum != null" >
        staff_num = #{record.staffNum,jdbcType=VARCHAR},
      </if>
      <if test="record.departmentId != null" >
        department_id = #{record.departmentId,jdbcType=INTEGER},
      </if>
      <if test="record.postId != null" >
        post_id = #{record.postId,jdbcType=INTEGER},
      </if>
      <if test="record.probation != null" >
        probation = #{record.probation,jdbcType=INTEGER},
      </if>
      <if test="record.quit != null" >
        quit = #{record.quit,jdbcType=INTEGER},
      </if>
      <if test="record.staffAdddate != null" >
        staff_addDate = #{record.staffAdddate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.staffMdate != null" >
        staff_mDate = #{record.staffMdate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update staff
    set staff_id = #{record.staffId,jdbcType=INTEGER},
      staff_name = #{record.staffName,jdbcType=VARCHAR},
      staff_sex = #{record.staffSex,jdbcType=VARCHAR},
      staff_birth = #{record.staffBirth,jdbcType=TIMESTAMP},
      staff_num = #{record.staffNum,jdbcType=VARCHAR},
      department_id = #{record.departmentId,jdbcType=INTEGER},
      post_id = #{record.postId,jdbcType=INTEGER},
      probation = #{record.probation,jdbcType=INTEGER},
      quit = #{record.quit,jdbcType=INTEGER},
      staff_addDate = #{record.staffAdddate,jdbcType=TIMESTAMP},
      staff_mDate = #{record.staffMdate,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.chinasofti.entity.Staff" >
    update staff
    <set >
      <if test="staffName != null" >
        staff_name = #{staffName,jdbcType=VARCHAR},
      </if>
      <if test="staffSex != null" >
        staff_sex = #{staffSex,jdbcType=VARCHAR},
      </if>
      <if test="staffBirth != null" >
        staff_birth = #{staffBirth,jdbcType=TIMESTAMP},
      </if>
      <if test="staffNum != null" >
        staff_num = #{staffNum,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null" >
        department_id = #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="postId != null" >
        post_id = #{postId,jdbcType=INTEGER},
      </if>
      <if test="probation != null" >
        probation = #{probation,jdbcType=INTEGER},
      </if>
      <if test="quit != null" >
        quit = #{quit,jdbcType=INTEGER},
      </if>
      <if test="staffAdddate != null" >
        staff_addDate = #{staffAdddate,jdbcType=TIMESTAMP},
      </if>
      <if test="staffMdate != null" >
        staff_mDate = #{staffMdate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where staff_id = #{staffId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chinasofti.entity.Staff" >
    update staff
    set staff_name = #{staffName,jdbcType=VARCHAR},
      staff_sex = #{staffSex,jdbcType=VARCHAR},
      staff_birth = #{staffBirth,jdbcType=TIMESTAMP},
      staff_num = #{staffNum,jdbcType=VARCHAR},
      department_id = #{departmentId,jdbcType=INTEGER},
      post_id = #{postId,jdbcType=INTEGER},
      probation = #{probation,jdbcType=INTEGER},
      quit = #{quit,jdbcType=INTEGER},
      staff_addDate = #{staffAdddate,jdbcType=TIMESTAMP},
      staff_mDate = #{staffMdate,jdbcType=TIMESTAMP}
    where staff_id = #{staffId,jdbcType=INTEGER}
  </update>
  <resultMap id="staffMap" type="staff" autoMapping="true">
    <id column="staff_id" property="staffId"/>
    <result column="staff_name" property="staffName" jdbcType="VARCHAR" />
    <result column="staff_sex" property="staffSex" jdbcType="VARCHAR" />
    <result column="staff_birth" property="staffBirth" jdbcType="TIMESTAMP" />
    <result column="staff_num" property="staffNum" jdbcType="VARCHAR" />
    <result column="department_id" property="departmentId" jdbcType="INTEGER" />
    <result column="post_id" property="postId" jdbcType="INTEGER" />
    <result column="probation" property="probation" jdbcType="INTEGER" />
    <result column="quit" property="quit" jdbcType="INTEGER" />
    <result column="staff_addDate" property="staffAdddate" jdbcType="TIMESTAMP" />
    <result column="staff_mDate" property="staffMdate" jdbcType="TIMESTAMP" />
    <association property="department" javaType="Department" autoMapping="true">
      <id column="department_id" property="departmentId"></id>
      <result column="department_name" property="departmentName"></result>
    </association>
    <association property="post" javaType="Post" autoMapping="true">
      <id column="post_id" property="post_id"></id>
      <result column="post_name" property="post_name"></result>
    </association>
  </resultMap>
  <select id="selectAllStuffs" resultMap="staffMap">
    SELECT s.staff_id,s.staff_name,s.staff_sex,s.staff_birth,s.staff_num,d.department_name,p.post_name,s.probation,s.quit
    from staff s LEFT JOIN department d
    ON s.department_id = d.department_id
        LEFT JOIN post p
        ON s.post_id = p.post_id
  </select>
  <resultMap id="searchStaffMap" type="staff" autoMapping="true">
    <id column="staff_id" property="staffId"/>
    <result column="staff_name" property="staffName" jdbcType="VARCHAR" />
    <result column="staff_sex" property="staffSex" jdbcType="VARCHAR" />
    <result column="staff_birth" property="staffBirth" jdbcType="TIMESTAMP" />
    <result column="staff_num" property="staffNum" jdbcType="VARCHAR" />
    <result column="department_id" property="departmentId" jdbcType="INTEGER" />
    <result column="post_id" property="postId" jdbcType="INTEGER" />
    <result column="probation" property="probation" jdbcType="INTEGER" />
    <result column="quit" property="quit" jdbcType="INTEGER" />
    <result column="staff_addDate" property="staffAdddate" jdbcType="TIMESTAMP" />
    <result column="staff_mDate" property="staffMdate" jdbcType="TIMESTAMP" />
    <association property="department" javaType="Department" autoMapping="true">
      <id column="department_id" property="departmentId"></id>
      <result column="department_name" property="departmentName"></result>
    </association>
    <association property="post" javaType="Post" autoMapping="true">
      <id column="post_id" property="post_id"></id>
      <result column="post_name" property="post_name"></result>
    </association>
  </resultMap>
  <select id="searchStaff" resultMap="searchStaffMap">
    SELECT s.staff_id,s.staff_name,s.staff_sex,s.staff_birth,s.staff_num,d.department_name,p.post_name,s.probation,s.quit
    from staff s LEFT JOIN department d
    ON s.department_id = d.department_id
        LEFT JOIN post p
        ON s.post_id = p.post_id
    where s.staff_id = #{staffId,jdbcType=INTEGER}
  </select>
</mapper>